---

- name: 'manage admin group'
  become: true
  group:
    name: 'katana'
    state: 'present'

- name: 'manage admin user'
  become: true
  user:
    name: 'katana'
    group: 'katana'
    password: '!'
    shell: '/bin/zsh'
    create_home: 'yes'
    state: 'present'
    update_password: 'on_create'

- name: 'manage admin user groups'
  become: true
  user:
    name: 'katana'
    append: true
    groups:
    - 'sudo'
    - 'adm'
    - 'systemd-journal'
    - 'staff'
    - 'ssh-enabled'
    - 'devops'

- name: 'manage admin user .ssh directory'
  become: true
  file:
    state: 'directory'
    path: '/home/katana/.ssh/'
    owner: 'katana'
    group: 'katana'
    mode: '0700'

# ...let's make sure the SSH keys are up to date.
- name: 'get latest admin keys checksum' # noqa 301
  local_action:
    module: 'shell'
    cmd: >
      curl -s --head "https://gitlab.cr.imson.co/api/v4/projects/107/repository/files/katana_keys?ref=master" \
        | grep x-gitlab-content-sha256 \
        | awk "{print \$2}"
    warn: false
  register: 'admin_keys_checksum'

- name: 'get local admin keys checksum'
  become: true
  stat:
    path: '/home/katana/.ssh/authorized_keys'
    checksum_algorithm: 'sha256'
  register: 'local_admin_keys_checksum'
  changed_when: 'local_admin_keys_checksum.stat.checksum is not defined or local_admin_keys_checksum.stat.checksum != admin_keys_checksum.stdout'

- name: 'update admin keys'
  block:
  - name: 'create local temp file' # noqa 305
    local_action:
      module: 'shell'
      cmd: 'mktemp'
    register: 'admin_temp'
  - name: 'download latest admin keys'
    local_action:
      module: 'get_url'
      url: 'https://gitlab.cr.imson.co/cr.imson.co/ssh-keys/-/raw/master/katana_keys'
      dest: '{{ admin_temp.stdout }}'
  - name: 'upload latest admin keys'
    copy:
      src: '{{ admin_temp.stdout }}'
      dest: '/home/katana/.ssh/authorized_keys'
      owner: 'katana'
      group: 'katana'
      mode: '0700'
  - name: 'delete temp file'
    local_action:
      module: 'file'
      path: '{{ admin_temp.stdout }}'
      state: 'absent'
  when: 'local_admin_keys_checksum.changed'

- name: 'determine if admin user has been configured'
  become: true
  stat:
    path: '/home/katana/.zshrc'
  register: 'admin_zshrc'

# let's deploy oh-my-zsh
- name: 'configure admin user'
  block:
    - name: 'get oh-my-zsh for admin' # noqa 401
      become: true
      become_user: 'katana'
      git:
        accept_hostkey: 'yes'
        repo: 'https://github.com/ohmyzsh/ohmyzsh.git'
        dest: '/home/katana/.oh-my-zsh'
        clone: 'yes'
        update: 'no'

    - name: 'get dotfiles for admin' # noqa 401
      become: true
      become_user: 'katana'
      git:
        repo: 'https://github.com/damianb/dotfiles.git'
        dest: '/home/katana/dotfiles'
        accept_hostkey: 'yes'
        clone: 'yes'
        update: 'no'

    - name: 'purge bashrc file (in preparation of stowing)'
      become: true
      file:
        path: '/home/katana/.bashrc'
        state: 'absent'

    - name: 'purge zshrc file (in preparation of stowing)'
      become: true
      file:
        path: '/home/katana/.zshrc'
        state: 'absent'

    - name: 'deploy dotfiles for admin'
      become: true
      become_user: 'katana'
      command:
        chdir: '/home/katana/dotfiles/'
        cmd: 'stow bash git tmux zsh'
  when: 'not admin_zshrc.stat.exists'


# and now, customizing root...
- name: 'determine if root has been configured'
  become: true
  stat:
    path: '/root/.zshrc'
  register: 'root_zshrc'

- name: 'configure root user'
  block:
    - name: 'get oh-my-zsh for root'  # noqa 401
      become: true
      git:
        accept_hostkey: 'yes'
        repo: 'https://github.com/ohmyzsh/ohmyzsh.git'
        dest: '/root/.oh-my-zsh'
        clone: 'yes'
        update: 'no'

    - name: 'get dotfiles for root'  # noqa 401
      become: true
      git:
        repo: 'https://github.com/damianb/dotfiles.git'
        dest: '/root/dotfiles'
        accept_hostkey: 'yes'
        clone: 'yes'
        update: 'no'

    - name: 'purge bashrc file (in preparation of stowing)'
      become: true
      file:
        path: '/root/.bashrc'
        state: 'absent'

    - name: 'purge zshrc file (in preparation of stowing)'
      become: true
      file:
        path: '/root/.zshrc'
        state: 'absent'

    - name: 'deploy dotfiles for root'
      become: true
      command:
        chdir: '/root/dotfiles/'
        cmd: 'stow bash git tmux zsh'

    - name: 'switch root to zsh'
      become: true
      user:
        name: 'root'
        shell: '/bin/zsh'
  when: 'not root_zshrc.stat.exists'
